// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v5.26.1
// source: ma_sn.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 客户端发起的存储请求
type InsertKVRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *InsertKVRequest) Reset() {
	*x = InsertKVRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ma_sn_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertKVRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertKVRequest) ProtoMessage() {}

func (x *InsertKVRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ma_sn_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertKVRequest.ProtoReflect.Descriptor instead.
func (*InsertKVRequest) Descriptor() ([]byte, []int) {
	return file_ma_sn_proto_rawDescGZIP(), []int{0}
}

func (x *InsertKVRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *InsertKVRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// 存储节点对存储请求的回复
type InsertKVResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyp      string `protobuf:"bytes,1,opt,name=keyp,proto3" json:"keyp,omitempty"` //前序叶子的key
	Key       string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Keyn      string `protobuf:"bytes,3,opt,name=keyn,proto3" json:"keyn,omitempty"`            //后序叶子的key
	LNAcc     int32  `protobuf:"varint,4,opt,name=LNAcc,proto3" json:"LNAcc,omitempty"`         //当前key对应叶子的累加器值
	OldLNnAcc int32  `protobuf:"varint,5,opt,name=oldLNnAcc,proto3" json:"oldLNnAcc,omitempty"` //后序叶子的旧累加器值
	NewLNnAcc int32  `protobuf:"varint,6,opt,name=newLNnAcc,proto3" json:"newLNnAcc,omitempty"` //后序叶子的新累加器值
}

func (x *InsertKVResponse) Reset() {
	*x = InsertKVResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ma_sn_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertKVResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertKVResponse) ProtoMessage() {}

func (x *InsertKVResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ma_sn_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertKVResponse.ProtoReflect.Descriptor instead.
func (*InsertKVResponse) Descriptor() ([]byte, []int) {
	return file_ma_sn_proto_rawDescGZIP(), []int{1}
}

func (x *InsertKVResponse) GetKeyp() string {
	if x != nil {
		return x.Keyp
	}
	return ""
}

func (x *InsertKVResponse) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *InsertKVResponse) GetKeyn() string {
	if x != nil {
		return x.Keyn
	}
	return ""
}

func (x *InsertKVResponse) GetLNAcc() int32 {
	if x != nil {
		return x.LNAcc
	}
	return 0
}

func (x *InsertKVResponse) GetOldLNnAcc() int32 {
	if x != nil {
		return x.OldLNnAcc
	}
	return 0
}

func (x *InsertKVResponse) GetNewLNnAcc() int32 {
	if x != nil {
		return x.NewLNnAcc
	}
	return 0
}

// 客户端发起的存储请求
type DeleteKVRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *DeleteKVRequest) Reset() {
	*x = DeleteKVRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ma_sn_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteKVRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteKVRequest) ProtoMessage() {}

func (x *DeleteKVRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ma_sn_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteKVRequest.ProtoReflect.Descriptor instead.
func (*DeleteKVRequest) Descriptor() ([]byte, []int) {
	return file_ma_sn_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteKVRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DeleteKVRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// 存储节点对存储请求的回复
type DeleteKVResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyp      string `protobuf:"bytes,1,opt,name=keyp,proto3" json:"keyp,omitempty"` //前序叶子的key
	Key       string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Keyn      string `protobuf:"bytes,3,opt,name=keyn,proto3" json:"keyn,omitempty"`            //后序叶子的key
	LNAcc     int32  `protobuf:"varint,4,opt,name=LNAcc,proto3" json:"LNAcc,omitempty"`         //当前key对应叶子的累加器值
	OldLNnAcc int32  `protobuf:"varint,5,opt,name=oldLNnAcc,proto3" json:"oldLNnAcc,omitempty"` //后序叶子的旧累加器值
	NewLNnAcc int32  `protobuf:"varint,6,opt,name=newLNnAcc,proto3" json:"newLNnAcc,omitempty"` //后序叶子的新累加器值
}

func (x *DeleteKVResponse) Reset() {
	*x = DeleteKVResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ma_sn_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteKVResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteKVResponse) ProtoMessage() {}

func (x *DeleteKVResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ma_sn_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteKVResponse.ProtoReflect.Descriptor instead.
func (*DeleteKVResponse) Descriptor() ([]byte, []int) {
	return file_ma_sn_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteKVResponse) GetKeyp() string {
	if x != nil {
		return x.Keyp
	}
	return ""
}

func (x *DeleteKVResponse) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DeleteKVResponse) GetKeyn() string {
	if x != nil {
		return x.Keyn
	}
	return ""
}

func (x *DeleteKVResponse) GetLNAcc() int32 {
	if x != nil {
		return x.LNAcc
	}
	return 0
}

func (x *DeleteKVResponse) GetOldLNnAcc() int32 {
	if x != nil {
		return x.OldLNnAcc
	}
	return 0
}

func (x *DeleteKVResponse) GetNewLNnAcc() int32 {
	if x != nil {
		return x.NewLNnAcc
	}
	return 0
}

// 客户端发起的单关键词查询请求
type SKQSNRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyword string `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
}

func (x *SKQSNRequest) Reset() {
	*x = SKQSNRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ma_sn_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SKQSNRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SKQSNRequest) ProtoMessage() {}

func (x *SKQSNRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ma_sn_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SKQSNRequest.ProtoReflect.Descriptor instead.
func (*SKQSNRequest) Descriptor() ([]byte, []int) {
	return file_ma_sn_proto_rawDescGZIP(), []int{4}
}

func (x *SKQSNRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

// 存储节点对存储请求的回复
type SKQSNResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsExist   bool     `protobuf:"varint,1,opt,name=isExist,proto3" json:"isExist,omitempty"`     //是否存在，存在为true，不存在为false
	Keyword   string   `protobuf:"bytes,2,opt,name=keyword,proto3" json:"keyword,omitempty"`      //查询关键词
	Values    []string `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"`        //查询结果
	LNAcc     int32    `protobuf:"varint,4,opt,name=LNAcc,proto3" json:"LNAcc,omitempty"`         //当前key对应叶子的累加器值（存在证明）
	Keyp      string   `protobuf:"bytes,5,opt,name=keyp,proto3" json:"keyp,omitempty"`            //前序叶子的key（不存在证明）
	Keyn      string   `protobuf:"bytes,6,opt,name=keyn,proto3" json:"keyn,omitempty"`            //后序叶子的key（不存在证明）
	OldLNnAcc int32    `protobuf:"varint,7,opt,name=oldLNnAcc,proto3" json:"oldLNnAcc,omitempty"` //后序叶子的旧累加器值（不存在证明）
	NewLNnAcc int32    `protobuf:"varint,8,opt,name=newLNnAcc,proto3" json:"newLNnAcc,omitempty"` //后序叶子的新累加器值（不存在证明）
}

func (x *SKQSNResponse) Reset() {
	*x = SKQSNResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ma_sn_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SKQSNResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SKQSNResponse) ProtoMessage() {}

func (x *SKQSNResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ma_sn_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SKQSNResponse.ProtoReflect.Descriptor instead.
func (*SKQSNResponse) Descriptor() ([]byte, []int) {
	return file_ma_sn_proto_rawDescGZIP(), []int{5}
}

func (x *SKQSNResponse) GetIsExist() bool {
	if x != nil {
		return x.IsExist
	}
	return false
}

func (x *SKQSNResponse) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *SKQSNResponse) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *SKQSNResponse) GetLNAcc() int32 {
	if x != nil {
		return x.LNAcc
	}
	return 0
}

func (x *SKQSNResponse) GetKeyp() string {
	if x != nil {
		return x.Keyp
	}
	return ""
}

func (x *SKQSNResponse) GetKeyn() string {
	if x != nil {
		return x.Keyn
	}
	return ""
}

func (x *SKQSNResponse) GetOldLNnAcc() int32 {
	if x != nil {
		return x.OldLNnAcc
	}
	return 0
}

func (x *SKQSNResponse) GetNewLNnAcc() int32 {
	if x != nil {
		return x.NewLNnAcc
	}
	return 0
}

var File_ma_sn_proto protoreflect.FileDescriptor

var file_ma_sn_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6d, 0x61, 0x5f, 0x73, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x39, 0x0a, 0x0f, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x4b, 0x56,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x9e, 0x01, 0x0a, 0x10, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x4b, 0x56, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65,
	0x79, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x4c, 0x4e, 0x41, 0x63, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c,
	0x4e, 0x41, 0x63, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x6c, 0x64, 0x4c, 0x4e, 0x6e, 0x41, 0x63,
	0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6f, 0x6c, 0x64, 0x4c, 0x4e, 0x6e, 0x41,
	0x63, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65, 0x77, 0x4c, 0x4e, 0x6e, 0x41, 0x63, 0x63, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x4c, 0x4e, 0x6e, 0x41, 0x63, 0x63,
	0x22, 0x39, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x56, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x9e, 0x01, 0x0a, 0x10,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x56, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6b, 0x65, 0x79, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x4e,
	0x41, 0x63, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x4e, 0x41, 0x63, 0x63,
	0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x6c, 0x64, 0x4c, 0x4e, 0x6e, 0x41, 0x63, 0x63, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x6f, 0x6c, 0x64, 0x4c, 0x4e, 0x6e, 0x41, 0x63, 0x63, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x65, 0x77, 0x4c, 0x4e, 0x6e, 0x41, 0x63, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x4c, 0x4e, 0x6e, 0x41, 0x63, 0x63, 0x22, 0x28, 0x0a, 0x0c,
	0x53, 0x4b, 0x51, 0x53, 0x4e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xd5, 0x01, 0x0a, 0x0d, 0x53, 0x4b, 0x51, 0x53, 0x4e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x4e, 0x41, 0x63, 0x63, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x4e, 0x41, 0x63, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65,
	0x79, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x6b, 0x65, 0x79, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x65,
	0x79, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x6c, 0x64, 0x4c, 0x4e, 0x6e, 0x41, 0x63, 0x63, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6f, 0x6c, 0x64, 0x4c, 0x4e, 0x6e, 0x41, 0x63, 0x63,
	0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65, 0x77, 0x4c, 0x4e, 0x6e, 0x41, 0x63, 0x63, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x4c, 0x4e, 0x6e, 0x41, 0x63, 0x63, 0x32, 0xd4,
	0x01, 0x0a, 0x0b, 0x53, 0x4e, 0x4d, 0x41, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3f,
	0x0a, 0x0c, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x4b, 0x56, 0x54, 0x6f, 0x53, 0x4e, 0x12, 0x16,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x4b, 0x56, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49,
	0x6e, 0x73, 0x65, 0x72, 0x74, 0x4b, 0x56, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3f, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x56, 0x4f, 0x6e, 0x53, 0x4e, 0x12,
	0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x56,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x56, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x43, 0x0a, 0x16, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x6e, 0x53, 0x4e, 0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x4b, 0x51, 0x53, 0x4e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x4b, 0x51, 0x53, 0x4e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_ma_sn_proto_rawDescOnce sync.Once
	file_ma_sn_proto_rawDescData = file_ma_sn_proto_rawDesc
)

func file_ma_sn_proto_rawDescGZIP() []byte {
	file_ma_sn_proto_rawDescOnce.Do(func() {
		file_ma_sn_proto_rawDescData = protoimpl.X.CompressGZIP(file_ma_sn_proto_rawDescData)
	})
	return file_ma_sn_proto_rawDescData
}

var file_ma_sn_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_ma_sn_proto_goTypes = []interface{}{
	(*InsertKVRequest)(nil),  // 0: proto.InsertKVRequest
	(*InsertKVResponse)(nil), // 1: proto.InsertKVResponse
	(*DeleteKVRequest)(nil),  // 2: proto.DeleteKVRequest
	(*DeleteKVResponse)(nil), // 3: proto.DeleteKVResponse
	(*SKQSNRequest)(nil),     // 4: proto.SKQSNRequest
	(*SKQSNResponse)(nil),    // 5: proto.SKQSNResponse
}
var file_ma_sn_proto_depIdxs = []int32{
	0, // 0: proto.SNMAService.InsertKVToSN:input_type -> proto.InsertKVRequest
	2, // 1: proto.SNMAService.DeleteKVOnSN:input_type -> proto.DeleteKVRequest
	4, // 2: proto.SNMAService.SingleKeywordQueryOnSN:input_type -> proto.SKQSNRequest
	1, // 3: proto.SNMAService.InsertKVToSN:output_type -> proto.InsertKVResponse
	3, // 4: proto.SNMAService.DeleteKVOnSN:output_type -> proto.DeleteKVResponse
	5, // 5: proto.SNMAService.SingleKeywordQueryOnSN:output_type -> proto.SKQSNResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_ma_sn_proto_init() }
func file_ma_sn_proto_init() {
	if File_ma_sn_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ma_sn_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertKVRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ma_sn_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertKVResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ma_sn_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteKVRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ma_sn_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteKVResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ma_sn_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SKQSNRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ma_sn_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SKQSNResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ma_sn_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ma_sn_proto_goTypes,
		DependencyIndexes: file_ma_sn_proto_depIdxs,
		MessageInfos:      file_ma_sn_proto_msgTypes,
	}.Build()
	File_ma_sn_proto = out.File
	file_ma_sn_proto_rawDesc = nil
	file_ma_sn_proto_goTypes = nil
	file_ma_sn_proto_depIdxs = nil
}
